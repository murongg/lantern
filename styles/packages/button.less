@btn-prefix-cls: ~"@{css-prefix}btn";

.btn() {
  .button-size;
  .button-type;
  display: inline-block;
  margin-bottom: 0;
  touch-action: manipulation;
  background-image: none;
  text-align: center;
  vertical-align: middle;
  font-weight: @btn-font-weight;
  border: 1px solid transparent;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;
  transition: 
    color @transition-time linear, 
    background-color @transition-time linear, 
    border @transition-time linear, 
    box-shadow @transition-time linear;

  > .@{css-prefix-iconfont} {
    line-height: 1;
  }

  &, &:active, &:focus {
    outline: 0;
  }
  
  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
  }

  &.disabled, &[disabled] {
    cursor: @cursor-disabled;
    > * {
      pointer-events: none;
    }
  }
}

// 按钮类型
@type: success, warning, error, heavy, medium, normal, general, transparent, default;
.button-type(@index: 1) when (@index < length(@type) + 1) {
  @prop: extract(@type, @index);
  @color: ~'btn-@{prop}-color';
  @background: ~'btn-@{prop}-bg';
  @border: ~'btn-@{prop}-border';

  &-@{prop} {
    .button-color(@@color, @@background, @@border);
    &:hover, &:active, &.active {
      .button-color(tint(@@color, 10%), shade(@@background, 10%), shade(@@border, 10%));
    }

    &-dashed {
      .button-color(@@background, transparent, @@border);
      border-style: dashed;
      &:hover, &:active, &.active {
        .button-color(shade(@@background, 10%), transparent, shade(@@border, 10%));
      }
    }
    &-ghost {
      .button-color(@@background, transparent, @@border);
      &:hover, &:active, &.active {
        .button-color(@@background, tint(@@background, 85%), @@border);
      }
    }
    &-text {
      .button-color(@@background, transparent, transparent);
      &:hover, &:active, &.active {
        .button-color(shade(@@background, 10%), transparent, transparent);
      }
    }
    &-long {
      width: 100%;
    }
  }
  .button-type(@index + 1);
}

// 按钮大小
@size: min, small, middle, large, max;
.button-size(@index: 1) when (@index < length(@size) + 1) {
  @prop: extract(@size, @index);
  @padding: ~'btn-padding-@{prop}';
  @font-size: ~'btn-font-size-@{prop}';
  @border-radius: ~'btn-circle-size-@{prop}';
  @icon-padding: ~'btn-icon-padding-@{prop}';

  &-@{prop} {
    padding: @@padding;
    font-size: @@font-size;
    line-height: @@font-size;
    border-radius: @btn-border-radius;
    &-icon {
      padding-left: 15px;
      padding-right: 15px;
    }
    &-circle {
      padding: @@padding;
      border-radius: @@border-radius;
    }
    &-icon-only {
      padding: @@icon-padding;
    }
  }

  .button-size(@index + 1);
}

// 按钮颜色
.button-color(@color; @background; @border) {
  color: @color;
  background: @background;
  border-color: @border;
}

.@{btn-prefix-cls} {
  .btn;
  &:before {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    background: #fff;
    opacity: 0.2;
    z-index: 1;
    transition: opacity @transition-time;
    pointer-events: none;
    display: none;
  }
  &-vip {
    .button-color(@vip-color, @vip-bg, @vip-bg);
    &:hover {
      .button-color(@vip-color, @vip-hover-bg, @vip-hover-bg);
    }
  }
  // loading状态
  &-loading {
    pointer-events: none;
    position: relative;
    &:before {
      display: block;
    }
    .lt-load-loop {
      display: inline-block;
      animation: rotate infinite ease-out 1s;
      @keyframes rotate {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }
    }
  }
  // 不可用状态
  &.disabled, &[disabled], fieldset[disabled] & {
    &, &:hover, &:focus, &:active, &.active {
      &:before {
        display: block;
      }
    }
  }
  // 组合
  &-group {
    .btn-group();
  }
  &-group-vertical {
    .btn-group-vertical();
  }
}

// Group
.btn-group() {
  .button-group-base;

  .@{btn-prefix-cls}:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
  
  &:not(&-vertical) > .@{btn-prefix-cls}:not(:first-child) {
    border-left: none;
  }

  &:not(&-vertical) > .@{btn-prefix-cls}:first-child {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }

  &:not(&-vertical) > .@{btn-prefix-cls}:last-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
  }
}

.button-group-vertical-base() {
  display: inline-block;
  vertical-align: middle;
  > .@{btn-prefix-cls} {
    display: block;
    width: 100%;
    max-width: 100%;
    float: none;
  }
}
.btn-group-vertical() {
  .button-group-vertical-base;

  .@{btn-prefix-cls}:not(:first-child) {
    border-top: none;
  }
  > .@{btn-prefix-cls}:first-child {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  > .@{btn-prefix-cls}:last-child {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

.button-group-base() {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  > .@{btn-prefix-cls} {
    position: relative;
    float: left;
    &:hover, &:active, &.active {
      z-index: 2;
    }
  }
  &-circle .@{btn-prefix-cls} {
    border-radius: @btn-circle-size;
  }
}

